"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.bondableChains = exports.config = exports.metadata = void 0;
const metadata_1 = require("./metadata");
Object.defineProperty(exports, "metadata", { enumerable: true, get: function () { return metadata_1.metadata; } });
const goerli = __importStar(require("./goerli"));
const kovan = __importStar(require("./kovan"));
const mainnet = __importStar(require("./mainnet"));
const staging = __importStar(require("./staging"));
const addresses = {
    mainnet: mainnet.addresses,
    staging: staging.addresses,
    kovan: kovan.addresses,
    goerli: goerli.addresses
};
const chains = {
    mainnet: mainnet.chains,
    staging: staging.chains,
    kovan: kovan.chains,
    goerli: goerli.chains
};
const bonders = {
    mainnet: mainnet.bonders,
    staging: staging.bonders,
    kovan: kovan.bonders,
    goerli: goerli.bonders
};
const bonderFeeBps = {
    mainnet: mainnet.bonderFeeBps,
    staging: staging.bonderFeeBps,
    kovan: kovan.bonderFeeBps,
    goerli: goerli.bonderFeeBps
};
const destinationFeeGasPriceMultiplier = {
    mainnet: mainnet.destinationFeeGasPriceMultiplier,
    staging: staging.destinationFeeGasPriceMultiplier,
    kovan: kovan.destinationFeeGasPriceMultiplier,
    goerli: goerli.destinationFeeGasPriceMultiplier
};
const config = {
    addresses,
    chains,
    bonders,
    bonderFeeBps,
    destinationFeeGasPriceMultiplier
};
exports.config = config;
exports.bondableChains = ['optimism', 'arbitrum'];
