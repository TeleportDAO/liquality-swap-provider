"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeRequest = void 0;
const isomorphic_fetch_1 = __importDefault(require("isomorphic-fetch"));
function makeRequest(chain, query, variables) {
    return __awaiter(this, void 0, void 0, function* () {
        const url = getUrl(chain);
        const res = yield (0, isomorphic_fetch_1.default)(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                Accept: 'application/json'
            },
            body: JSON.stringify({
                query,
                variables: variables || {}
            })
        });
        const jsonRes = yield res.json();
        if (jsonRes.errors) {
            throw new Error(jsonRes.errors[0].message);
        }
        return jsonRes.data;
    });
}
exports.makeRequest = makeRequest;
function getUrl(chain) {
    if (chain === 'gnosis') {
        chain = 'xdai';
    }
    if (chain === 'ethereum') {
        chain = 'mainnet';
    }
    if (chain === 'mainnet') {
        // return 'https://gateway.thegraph.com/api/bd5bd4881b83e6c2c93d8dc80c9105ba/subgraphs/id/Cjv3tykF4wnd6m9TRmQV7weiLjizDnhyt6x2tTJB42Cy'
    }
    return `https://api.thegraph.com/subgraphs/name/hop-protocol/hop-${chain}`;
}
