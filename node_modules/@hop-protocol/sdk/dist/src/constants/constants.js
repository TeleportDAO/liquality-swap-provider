"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventNames = exports.Errors = exports.MinPolygonGasLimit = exports.MinPolygonGasPrice = exports.PendingAmountBuffer = exports.LpFeeBps = exports.SettlementGasLimitPerTx = exports.BondTransferGasLimit = exports.TokenIndex = exports.HToken = exports.WrappedToken = exports.CanonicalToken = exports.Slug = exports.ChainSlug = exports.ChainName = exports.ChainId = exports.NetworkSlug = void 0;
const ethers_1 = require("ethers");
var NetworkSlug;
(function (NetworkSlug) {
    NetworkSlug["Mainnet"] = "mainnet";
    NetworkSlug["Staging"] = "staging";
    NetworkSlug["Goerli"] = "goerli";
    NetworkSlug["Kovan"] = "kovan";
})(NetworkSlug = exports.NetworkSlug || (exports.NetworkSlug = {}));
var ChainId;
(function (ChainId) {
    ChainId[ChainId["Ethereum"] = 1] = "Ethereum";
    ChainId[ChainId["Optimism"] = 10] = "Optimism";
    ChainId[ChainId["Arbitrum"] = 42161] = "Arbitrum";
    ChainId[ChainId["Polygon"] = 137] = "Polygon";
    ChainId[ChainId["Gnosis"] = 100] = "Gnosis";
})(ChainId = exports.ChainId || (exports.ChainId = {}));
var ChainName;
(function (ChainName) {
    ChainName["Ethereum"] = "Ethereum";
    ChainName["Optimism"] = "Optimism";
    ChainName["Arbitrum"] = "Arbitrum";
    ChainName["Polygon"] = "Polygon";
    ChainName["Gnosis"] = "Gnosis";
})(ChainName = exports.ChainName || (exports.ChainName = {}));
var ChainSlug;
(function (ChainSlug) {
    ChainSlug["Ethereum"] = "ethereum";
    ChainSlug["Optimism"] = "optimism";
    ChainSlug["Arbitrum"] = "arbitrum";
    ChainSlug["Polygon"] = "polygon";
    ChainSlug["Gnosis"] = "gnosis";
})(ChainSlug = exports.ChainSlug || (exports.ChainSlug = {}));
var Slug;
(function (Slug) {
    Slug["ethereum"] = "ethereum";
    Slug["kovan"] = "kovan";
    Slug["goerli"] = "goerli";
    Slug["staging"] = "staging";
    Slug["mainnet"] = "mainnet";
    Slug["arbitrum"] = "arbitrum";
    Slug["optimism"] = "optimism";
    Slug["gnosis"] = "gnosis";
    Slug["polygon"] = "polygon";
})(Slug = exports.Slug || (exports.Slug = {}));
var CanonicalToken;
(function (CanonicalToken) {
    CanonicalToken["ETH"] = "ETH";
    CanonicalToken["MATIC"] = "MATIC";
    CanonicalToken["XDAI"] = "XDAI";
    CanonicalToken["USDC"] = "USDC";
    CanonicalToken["USDT"] = "USDT";
    CanonicalToken["DAI"] = "DAI";
    CanonicalToken["WBTC"] = "WBTC";
    CanonicalToken["sBTC"] = "sBTC";
    CanonicalToken["sETH"] = "sETH";
})(CanonicalToken = exports.CanonicalToken || (exports.CanonicalToken = {}));
var WrappedToken;
(function (WrappedToken) {
    WrappedToken["WETH"] = "WETH";
    WrappedToken["WMATIC"] = "WMATIC";
    WrappedToken["WXDAI"] = "WXDAI";
})(WrappedToken = exports.WrappedToken || (exports.WrappedToken = {}));
var HToken;
(function (HToken) {
    HToken["hETH"] = "hETH";
    HToken["hMATIC"] = "hMATIC";
    HToken["hUSDC"] = "hUSDC";
    HToken["hUSDT"] = "hUSDT";
    HToken["hDAI"] = "hDAI";
})(HToken = exports.HToken || (exports.HToken = {}));
var TokenIndex;
(function (TokenIndex) {
    TokenIndex[TokenIndex["CanonicalToken"] = 0] = "CanonicalToken";
    TokenIndex[TokenIndex["HopBridgeToken"] = 1] = "HopBridgeToken";
})(TokenIndex = exports.TokenIndex || (exports.TokenIndex = {}));
var BondTransferGasLimit;
(function (BondTransferGasLimit) {
    BondTransferGasLimit["Ethereum"] = "165000";
    BondTransferGasLimit["Optimism"] = "100000000";
    BondTransferGasLimit["Arbitrum"] = "2500000";
})(BondTransferGasLimit = exports.BondTransferGasLimit || (exports.BondTransferGasLimit = {}));
exports.SettlementGasLimitPerTx = {
    ethereum: 5141,
    polygon: 5933,
    gnosis: 3218,
    optimism: 8545,
    arbitrum: 59105
};
exports.LpFeeBps = '4';
exports.PendingAmountBuffer = '50000';
exports.MinPolygonGasPrice = 30000000000;
exports.MinPolygonGasLimit = ethers_1.BigNumber.from(500000);
var Errors;
(function (Errors) {
    Errors["NotEnoughAllowance"] = "Not enough allowance. Please call `approve` on token contract to allow contract to move tokens.";
    Errors["xDaiRebrand"] = "NOTICE: xDai has been rebranded to Gnosis. Chain \"xdai\" is deprecated. Use \"gnosis\" instead.";
})(Errors = exports.Errors || (exports.Errors = {}));
var EventNames;
(function (EventNames) {
    EventNames["TransferSent"] = "TransferSent";
    EventNames["TransferSentToL2"] = "TransferSentToL2";
})(EventNames = exports.EventNames || (exports.EventNames = {}));
