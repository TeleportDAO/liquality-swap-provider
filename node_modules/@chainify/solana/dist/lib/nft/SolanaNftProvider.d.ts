import { Nft, Wallet } from '@chainify/client';
import { AddressType, BigNumber, NFTAsset, Transaction } from '@chainify/types';
import { BaseProvider } from '@ethersproject/providers';
import { SolanaWalletProvider } from '../wallet/SolanaWalletProvider';
declare type MoralisConfig = {
    url: string;
    apiKey: string;
    appId: string;
};
export declare class SolanaNftProvider extends Nft<BaseProvider, SolanaWalletProvider> {
    private _config;
    private readonly _httpClient;
    constructor(walletProvider: Wallet<BaseProvider, SolanaWalletProvider>, config: MoralisConfig);
    fetch(): Promise<NFTAsset[]>;
    transfer(contract: AddressType, receiver: AddressType): Promise<Transaction<any>>;
    balanceOf(_contractAddress: AddressType, _owners: AddressType[], _tokenIDs: number[]): Promise<BigNumber | BigNumber[]>;
    approve(_contract: AddressType, _operator: AddressType, _tokenID: number): Promise<Transaction<any>>;
    approveAll(_contract: AddressType, _operator: AddressType, _state: boolean): Promise<Transaction<any>>;
    isApprovedForAll(_contract: AddressType, _operator: AddressType): Promise<boolean>;
}
export {};
