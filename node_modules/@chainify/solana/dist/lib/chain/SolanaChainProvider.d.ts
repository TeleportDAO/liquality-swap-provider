import { Chain } from '@chainify/client';
import { AddressType, Asset, BigNumber, Block, FeeDetails, Network, TokenDetails, Transaction } from '@chainify/types';
import { BlockResponse, Connection } from '@solana/web3.js';
export declare class SolanaChainProvider extends Chain<Connection, Network> {
    private tokenList;
    constructor(network: Network);
    getTokenDetails(tokenAddress: string): Promise<TokenDetails>;
    getBlockByNumber(blockNumber?: number, includeTx?: boolean): Promise<Block<BlockResponse, Transaction>>;
    getBlockHeight(): Promise<number>;
    getTransactionByHash(txHash: string): Promise<Transaction>;
    getBalance(addresses: AddressType[], assets: Asset[]): Promise<BigNumber[]>;
    /**
     * Fee price is fixed in Solana and it's equal to 5000 / LAMPORTS_PER_SOL
     */
    getFees(): Promise<FeeDetails>;
    sendRawTransaction(rawTransaction: string): Promise<string>;
    sendRpcRequest(_method: string, _params: any[]): Promise<void>;
    getBlockByHash(_blockHash: string): Promise<Block<Block, Transaction>>;
}
