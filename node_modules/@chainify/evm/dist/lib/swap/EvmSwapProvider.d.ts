import { SwapParams, Transaction } from '@chainify/types';
import { BaseProvider } from '@ethersproject/providers';
import { ClaimEvent, InitiateEvent, RefundEvent } from '../typechain/LiqualityHTLC';
import { EvmSwapOptions } from '../types';
import { EvmBaseWalletProvider } from '../wallet/EvmBaseWalletProvider';
import { EvmBaseSwapProvider } from './EvmBaseSwapProvider';
export declare class EvmSwapProvider extends EvmBaseSwapProvider {
    protected walletProvider: EvmBaseWalletProvider<BaseProvider>;
    constructor(swapOptions: EvmSwapOptions, walletProvider?: EvmBaseWalletProvider<BaseProvider>);
    findInitiateSwapTransaction(swapParams: SwapParams): Promise<Transaction<InitiateEvent>>;
    findClaimSwapTransaction(swapParams: SwapParams, initTxHash: string): Promise<Transaction<ClaimEvent>>;
    findRefundSwapTransaction(swapParams: SwapParams, initTxHash: string): Promise<Transaction<RefundEvent>>;
    private searchLogs;
    private findTx;
}
