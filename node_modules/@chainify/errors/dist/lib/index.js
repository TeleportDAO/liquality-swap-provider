"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidValueError = exports.InvalidSwapParamsError = exports.ReplaceFeeInsufficientError = exports.InsufficientBalanceError = exports.InvalidExpirationError = exports.InvalidAddressError = exports.InvalidSecretError = exports.NodeError = exports.WalletError = exports.InvalidDestinationAddressError = exports.BlockNotFoundError = exports.TxFailedError = exports.TxNotFoundError = exports.PendingTxError = exports.InvalidProviderResponseError = exports.UnimplementedMethodError = exports.UnsupportedMethodError = exports.NoProviderError = exports.DuplicateProviderError = exports.InvalidProviderError = exports.ProviderNotFoundError = exports.StandardError = void 0;
const standard_error_1 = __importDefault(require("standard-error"));
function createError(name) {
    const Error = class extends standard_error_1.default {
    };
    Error.prototype.name = name;
    return Error;
}
exports.StandardError = createError('StandardError');
exports.ProviderNotFoundError = createError('ProviderNotFoundError');
exports.InvalidProviderError = createError('InvalidProviderError');
exports.DuplicateProviderError = createError('DuplicateProviderError');
exports.NoProviderError = createError('NoProviderError');
exports.UnsupportedMethodError = createError('UnsupportedMethodError');
exports.UnimplementedMethodError = createError('UnimplementedMethodError');
exports.InvalidProviderResponseError = createError('InvalidProviderResponseError');
exports.PendingTxError = createError('PendingTxError');
exports.TxNotFoundError = createError('TxNotFoundError');
exports.TxFailedError = createError('TxFailedError');
exports.BlockNotFoundError = createError('BlockNotFoundError');
exports.InvalidDestinationAddressError = createError('InvalidDestinationAddressError');
exports.WalletError = createError('WalletError');
exports.NodeError = createError('NodeError');
exports.InvalidSecretError = createError('InvalidSecretError');
exports.InvalidAddressError = createError('InvalidAddressError');
exports.InvalidExpirationError = createError('InvalidExpirationError');
exports.InsufficientBalanceError = createError('InsufficientBalanceError');
exports.ReplaceFeeInsufficientError = createError('ReplaceFeeInsufficientError');
exports.InvalidSwapParamsError = createError('InvalidSwapParamsError');
exports.InvalidValueError = createError('InvalidValueError');
//# sourceMappingURL=index.js.map