import Chain from './Chain';
import Nft from './Nft';
import Swap from './Swap';
import Wallet from './Wallet';
export default class Client<ChainType extends Chain<any> = Chain<any>, WalletType extends Wallet<any, any> = Wallet<any, any>, SwapType extends Swap<any, any> = Swap<any, any>, NftType extends Nft<any, any> = Nft<any, any>> {
    private _chain;
    private _wallet;
    private _swap;
    private _nft;
    constructor(chain?: ChainType, wallet?: WalletType, swap?: SwapType, nft?: NftType);
    connect(provider: ChainType | WalletType | SwapType | NftType): this;
    get chain(): ChainType;
    set chain(chain: ChainType);
    get wallet(): WalletType;
    set wallet(wallet: WalletType);
    get swap(): SwapType;
    set swap(swap: SwapType);
    get nft(): NftType;
    set nft(nft: NftType);
    private connectChain;
    private connectWallet;
}
