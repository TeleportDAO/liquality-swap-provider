import { SwapParams, Transaction } from '@chainify/types';
import { BitcoinBaseChainProvider } from '../chain/BitcoinBaseChainProvider';
import { Transaction as BitcoinTransaction } from '../types';
import { IBitcoinWallet } from '../wallet/IBitcoinWallet';
import { BitcoinSwapBaseProvider } from './BitcoinSwapBaseProvider';
import { BitcoinSwapProviderOptions } from './types';
export declare class BitcoinSwapRpcProvider extends BitcoinSwapBaseProvider {
    constructor(options: BitcoinSwapProviderOptions, walletProvider?: IBitcoinWallet<BitcoinBaseChainProvider>);
    findSwapTransaction(_swapParams: SwapParams, blockNumber: number, predicate: (tx: Transaction<BitcoinTransaction>) => boolean): Promise<Transaction<any>>;
}
