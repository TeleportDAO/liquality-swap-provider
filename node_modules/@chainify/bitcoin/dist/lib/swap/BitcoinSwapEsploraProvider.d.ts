import { SwapParams, Transaction } from '@chainify/types';
import { Transaction as BitcoinTransaction } from '../types';
import { BitcoinBaseWalletProvider } from '../wallet/BitcoinBaseWallet';
import { BitcoinSwapBaseProvider } from './BitcoinSwapBaseProvider';
import { BitcoinSwapProviderOptions, TransactionMatchesFunction } from './types';
export declare class BitcoinSwapEsploraProvider extends BitcoinSwapBaseProvider {
    private _httpClient;
    constructor(options: BitcoinSwapProviderOptions, walletProvider?: BitcoinBaseWalletProvider);
    findSwapTransaction(swapParams: SwapParams, _blockNumber: number, predicate: TransactionMatchesFunction): Promise<Transaction<BitcoinTransaction>>;
    private findAddressTransaction;
}
