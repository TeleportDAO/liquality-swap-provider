import { Address, Network } from '@chainify/types';
import Transport from '@ledgerhq/hw-transport';
import { CreateOptions, GetAddressesFuncType, HWApp, Newable } from './types';
export declare class LedgerProvider<TApp extends HWApp> {
    private _appType;
    private _transportCreator;
    private _network;
    private _scrambleKey;
    protected _transport: Transport;
    protected _appInstance: TApp;
    constructor(appType: Newable<TApp>, options: CreateOptions);
    isWalletAvailable(): Promise<boolean>;
    getConnectedNetwork(): Promise<Network>;
    getWalletAddress(address: string, getAddresses: GetAddressesFuncType): Promise<Address>;
    getApp(): Promise<TApp>;
    protected errorProxy(target: any, func: string): any;
    private createTransport;
}
