"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebHidTransportCreator = void 0;
const hw_transport_webhid_1 = __importDefault(require("@ledgerhq/hw-transport-webhid"));
class WebHidTransportCreator {
    constructor() {
        this._transport = null;
        this._onDisconnectCallbacks = [];
    }
    create(onDisconnect) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            if (!this._transport || !((_b = (_a = this._transport) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.opened)) {
                this._transport = yield hw_transport_webhid_1.default.create();
                this._transport.on('disconnect', () => __awaiter(this, void 0, void 0, function* () {
                    var _c;
                    this._onDisconnectCallbacks.forEach((cb) => {
                        cb();
                    });
                    yield ((_c = this._transport) === null || _c === void 0 ? void 0 : _c.close());
                    this._transport = null;
                    this._onDisconnectCallbacks = [];
                }));
            }
            if (onDisconnect) {
                this._onDisconnectCallbacks.push(onDisconnect);
            }
            return this._transport;
        });
    }
}
exports.WebHidTransportCreator = WebHidTransportCreator;
//# sourceMappingURL=WebHidTransportCreator.js.map