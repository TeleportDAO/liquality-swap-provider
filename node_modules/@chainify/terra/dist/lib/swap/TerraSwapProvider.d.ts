import { SwapParams, Transaction } from '@chainify/types';
import { TerraWalletProvider } from '..';
import { TerraTxInfo } from '../types';
import { TerraSwapBaseProvider } from './TerraSwapBaseProvider';
export declare class TerraSwapProvider extends TerraSwapBaseProvider {
    private _httpClient;
    constructor(helperUrl: string, walletProvider?: TerraWalletProvider);
    findInitiateSwapTransaction(swapParams: SwapParams): Promise<Transaction<TerraTxInfo>>;
    findClaimSwapTransaction(swapParams: SwapParams, initTxHash: string): Promise<Transaction<TerraTxInfo>>;
    findRefundSwapTransaction(swapParams: SwapParams, initTxHash: string): Promise<Transaction<TerraTxInfo>>;
    protected onWalletProviderUpdate(_wallet: TerraWalletProvider): void;
    private findAddressTransaction;
    private parseScraperTransaction;
}
