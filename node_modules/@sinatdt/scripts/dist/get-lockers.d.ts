export = getLockers;
declare function getLockers({ amount, type, targetNetworkConnectionInfo, testnet, }: {
    amount: any;
    type?: string | undefined;
    targetNetworkConnectionInfo: any;
    testnet?: boolean | undefined;
}): Promise<{
    availableLockers: {
        bitcoinAddress: string | undefined;
        targetAddress: any;
        capacity: any;
        unsubmittedAmount: number;
        warning: boolean;
        lockerInfo: {
            lockerLockingScript: any;
            lockerRescueType: any;
            lockerRescueScript: any;
            TDTLockedAmount: any;
            nativeTokenLockedAmount: any;
            netMinted: any;
            slashingTeleBTCAmount: any;
            reservedNativeTokenForSlash: any;
            isLocker: any;
            isCandidate: any;
            isScriptHash: any;
            isActive: any;
        };
    }[];
    preferredLocker: {
        bitcoinAddress: string | undefined;
        targetAddress: any;
        capacity: any;
        unsubmittedAmount: number;
        warning: boolean;
        lockerInfo: {
            lockerLockingScript: any;
            lockerRescueType: any;
            lockerRescueScript: any;
            TDTLockedAmount: any;
            nativeTokenLockedAmount: any;
            netMinted: any;
            slashingTeleBTCAmount: any;
            reservedNativeTokenForSlash: any;
            isLocker: any;
            isCandidate: any;
            isScriptHash: any;
            isActive: any;
        };
    } | undefined;
}>;
//# sourceMappingURL=get-lockers.d.ts.map