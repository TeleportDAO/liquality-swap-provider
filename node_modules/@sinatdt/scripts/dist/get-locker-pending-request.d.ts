export = getLockerPendingRequests;
declare function getLockerPendingRequests(lockerBtcAddress: any, targetNetworkConnectionInfo: any, testnet?: boolean): Promise<{
    confirmedRequests: {
        transaction: any;
        request: {
            data: {
                requestType: string;
                chainId: number;
                appId: number;
                recipientAddress: string;
                percentageFee: number;
                speed: boolean;
                exchangeTokenAddress: string;
                outputAmount: number;
                deadline: number;
                isFixedToken: boolean;
            } | {
                requestType: string;
                chainId: number;
                appId: number;
                recipientAddress: string;
                percentageFee: number;
                mode: number;
                tokenAddress: string;
                borrowAmount: number;
            } | null;
            value: any;
        };
        lockerAddress: any;
        lockerLockingScript: any;
    }[];
    pendingRequests: {
        transaction: any;
        request: {
            data: {
                requestType: string;
                chainId: number;
                appId: number;
                recipientAddress: string;
                percentageFee: number;
                speed: boolean;
                exchangeTokenAddress: string;
                outputAmount: number;
                deadline: number;
                isFixedToken: boolean;
            } | {
                requestType: string;
                chainId: number;
                appId: number;
                recipientAddress: string;
                percentageFee: number;
                mode: number;
                tokenAddress: string;
                borrowAmount: number;
            } | null;
            value: any;
        };
        lockerAddress: any;
        lockerLockingScript: any;
    }[];
    numberOfUnsubmittedRequests: number;
    unsubmittedAmount: number;
}>;
//# sourceMappingURL=get-locker-pending-request.d.ts.map