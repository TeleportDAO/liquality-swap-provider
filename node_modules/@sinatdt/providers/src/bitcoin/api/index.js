// main ap provider
const BlockStream = require('./blockstream')

// utxo provider
const NowNodes = require('./nownodes')

module.exports = {
  BlockStream,
  NowNodes,
}

// provider structure :

// getLatestBlockNumber -> number

// getBlockHash blockNumber -> hash

// getBlockHeader blockNumber -> hex

// getTransactionHistory (address,blockNumber?,lastTxId?) -> {
//   txId,
//   index,
//   vin,
//   vout,
//   blockHash,
//   blockNumber,
//   locktime?,
//   version?,
//   merkleProof?,
//   hex?,
// }
// vin : [{
//   txId,
//   index,
//   address,
//   value,
//   script,
// }]
// vout : [{
//   address,
//   value,
//   script,
// }]

// getMempoolTransactionHistory (address) -> {
//   txId,
//   index,
//   vin,
//   vout,
//   blockHash,
//   blockNumber,
//   locktime?,
//   version?,
//   hex?,
// }
// vout : [{
//   address,
//   value,
//   script,
// }]

// getRawTransaction (txId) -> hex

// getTransaction (txId) ->
// {
//   txId,
//   index,
//   vout,
//   blockHash,
//   blockNumber,
//   locktime?,
//   version?,

//   merkleProof?,
//   hex?,

//   vin?,
// }
// vout : [{
//   address,
//   value,
//   script,
// }]

// getMerkleProof (txId,blockNumber) ->
// {
//   intermediateNodes,
//   transactionIndex,
// }

// sendRawTransaction(rawTxHex) -> txId

// --------------------------------------------------------
// getUtxos (address) ->
// {
//   txId,
//   index,
//   value, in satoshi
//   blockNumber,
// }
