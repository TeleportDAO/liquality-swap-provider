const BaseTransactionBuilder = require('./transaction-builder')
const BitcoinInterface = require('../bitcoin-interface')

class BitcoinTransactionBuilder extends BaseTransactionBuilder {
  constructor(connectionInfo, networkName, network) {
    super({
      network,
      testnet: networkName?.includes('_testnet'),
      dustLimit: 1000,
    })
    this.btcInterface = new BitcoinInterface(connectionInfo, networkName)
  }

  async _getUtxo(userAddress) {
    let utxos = await this.btcInterface.getAddressesUtxo([userAddress])
    return utxos.map((tx) => ({
      hash: tx.txId,
      value: tx.value,
      index: tx.index,
    }))
  }

  async _getFeeRate(speed) {
    return this.btcInterface.getFeeRate(speed)
  }

  async _getTransactionHex(transactionId) {
    return this.btcInterface.provider.getRawTransaction(transactionId)
  }

  async sendTx(txHex) {
    let txId = await this.btcInterface.provider.sendRawTransaction(txHex)
    return txId
  }
}

module.exports = BitcoinTransactionBuilder
