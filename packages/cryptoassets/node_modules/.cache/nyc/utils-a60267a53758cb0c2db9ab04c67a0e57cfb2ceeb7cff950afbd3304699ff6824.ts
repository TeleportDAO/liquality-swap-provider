"use strict";function cov_vjah2j3rj(){var path="/home/niusha/Desktop/TeleportDAO/liquality-swap-provider/packages/cryptoassets/src/assets/utils.ts";var hash="16aa44044a2971075dbdbc46b29dac94c7f72e31";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/niusha/Desktop/TeleportDAO/liquality-swap-provider/packages/cryptoassets/src/assets/utils.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:74}},"2":{start:{line:4,column:16},end:{line:4,column:35}},"3":{start:{line:5,column:26},end:{line:10,column:1}},"4":{start:{line:6,column:4},end:{line:9,column:11}},"5":{start:{line:7,column:8},end:{line:7,column:112}},"6":{start:{line:8,column:8},end:{line:8,column:22}},"7":{start:{line:11,column:0},end:{line:11,column:46}},"8":{start:{line:12,column:37},end:{line:17,column:1}},"9":{start:{line:13,column:4},end:{line:16,column:11}},"10":{start:{line:14,column:8},end:{line:14,column:147}},"11":{start:{line:15,column:8},end:{line:15,column:22}},"12":{start:{line:18,column:0},end:{line:18,column:68}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:26},end:{line:5,column:27}},loc:{start:{line:5,column:45},end:{line:10,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:6,column:40},end:{line:6,column:41}},loc:{start:{line:6,column:59},end:{line:9,column:5}},line:6},"2":{name:"(anonymous_2)",decl:{start:{line:12,column:37},end:{line:12,column:38}},loc:{start:{line:12,column:49},end:{line:17,column:1}},line:12},"3":{name:"(anonymous_3)",decl:{start:{line:13,column:40},end:{line:13,column:41}},loc:{start:{line:13,column:59},end:{line:16,column:5}},line:13}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0,"2":0,"3":0},b:{},inputSourceMap:{version:3,file:"/home/niusha/Desktop/TeleportDAO/liquality-swap-provider/packages/cryptoassets/src/assets/utils.ts",sources:["/home/niusha/Desktop/TeleportDAO/liquality-swap-provider/packages/cryptoassets/src/assets/utils.ts"],names:[],mappings:";;;AACA,oCAAuE;AAQhE,MAAM,iBAAiB,GAAG,CAC/B,MAA8D,EAC9D,KAAc,EACJ,EAAE;IACZ,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,MAAgB,EAAE,KAAK,EAAE,EAAE;QAC9D,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,mCAAQ,KAAK,KAAE,IAAI,EAAE,kBAAU,CAAC,KAAK,EAAE,KAAK,GAAE,CAAC;QACjE,OAAO,MAAM,CAAC;IAChB,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC,CAAC;AARW,QAAA,iBAAiB,qBAQ5B;AAgBK,MAAM,4BAA4B,GAAG,CAAC,MAAgB,EAAE,EAAE;IAC/D,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,MAAgC,EAAE,KAAa,EAAE,EAAE;QACtF,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,mCAAQ,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAE,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,oBAAO,KAAK,IAAI,CAAC;QAChG,OAAO,MAAM,CAAC;IAChB,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC,CAAC;AALW,QAAA,4BAA4B,gCAKvC",sourcesContent:["import { IAsset } from '../interfaces/IAsset';\nimport { AssetMap, AssetTypes, ChainId, MakeOptional } from '../types';\n\n/**\n * Adds the common properties for each token map - type and chain\n * @param tokens\n * @param chain\n * @returns\n */\nexport const transformTokenMap = (\n  tokens: Record<string, MakeOptional<IAsset, 'type' | 'chain'>>,\n  chain: ChainId\n): AssetMap => {\n  return Object.values(tokens).reduce((result: AssetMap, token) => {\n    result[token.code] = { ...token, type: AssetTypes.erc20, chain };\n    return result;\n  }, {});\n};\n\n/**\n * {\n *    [chainId_1]: {\n *        [token_1_address]: {...},\n *        [token_2_address]: {...}\n *    },\n *    [chainId_2]: {\n *        [token_1_address]: {...},\n *        [token_2_address]: {...}\n *    }\n * }\n * @param tokens\n * @returns\n */\nexport const transformChainToTokenAddress = (tokens: AssetMap) => {\n  return Object.values(tokens).reduce((result: Record<string, AssetMap>, token: IAsset) => {\n    result[token.chain] = { ...result[token.chain], [String(token.contractAddress)]: { ...token } };\n    return result;\n  }, {});\n};\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"16aa44044a2971075dbdbc46b29dac94c7f72e31"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_vjah2j3rj=function(){return actualCoverage;};}return actualCoverage;}cov_vjah2j3rj();cov_vjah2j3rj().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_vjah2j3rj().s[1]++;exports.transformChainToTokenAddress=exports.transformTokenMap=void 0;const types_1=(cov_vjah2j3rj().s[2]++,require("../types"));cov_vjah2j3rj().s[3]++;const transformTokenMap=(tokens,chain)=>{cov_vjah2j3rj().f[0]++;cov_vjah2j3rj().s[4]++;return Object.values(tokens).reduce((result,token)=>{cov_vjah2j3rj().f[1]++;cov_vjah2j3rj().s[5]++;result[token.code]=Object.assign(Object.assign({},token),{type:types_1.AssetTypes.erc20,chain});cov_vjah2j3rj().s[6]++;return result;},{});};cov_vjah2j3rj().s[7]++;exports.transformTokenMap=transformTokenMap;cov_vjah2j3rj().s[8]++;const transformChainToTokenAddress=tokens=>{cov_vjah2j3rj().f[2]++;cov_vjah2j3rj().s[9]++;return Object.values(tokens).reduce((result,token)=>{cov_vjah2j3rj().f[3]++;cov_vjah2j3rj().s[10]++;result[token.chain]=Object.assign(Object.assign({},result[token.chain]),{[String(token.contractAddress)]:Object.assign({},token)});cov_vjah2j3rj().s[11]++;return result;},{});};cov_vjah2j3rj().s[12]++;exports.transformChainToTokenAddress=transformChainToTokenAddress;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvbml1c2hhL0Rlc2t0b3AvVGVsZXBvcnREQU8vbGlxdWFsaXR5LXN3YXAtcHJvdmlkZXIvcGFja2FnZXMvY3J5cHRvYXNzZXRzL3NyYy9hc3NldHMvdXRpbHMudHMiLCJzb3VyY2VzIjpbIi9ob21lL25pdXNoYS9EZXNrdG9wL1RlbGVwb3J0REFPL2xpcXVhbGl0eS1zd2FwLXByb3ZpZGVyL3BhY2thZ2VzL2NyeXB0b2Fzc2V0cy9zcmMvYXNzZXRzL3V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLG9DQUF1RTtBQVFoRSxNQUFNLGlCQUFpQixHQUFHLENBQy9CLE1BQThELEVBQzlELEtBQWMsRUFDSixFQUFFO0lBQ1osT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQWdCLEVBQUUsS0FBSyxFQUFFLEVBQUU7UUFDOUQsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsbUNBQVEsS0FBSyxLQUFFLElBQUksRUFBRSxrQkFBVSxDQUFDLEtBQUssRUFBRSxLQUFLLEdBQUUsQ0FBQztRQUNqRSxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDVCxDQUFDLENBQUM7QUFSVyxRQUFBLGlCQUFpQixxQkFRNUI7QUFnQkssTUFBTSw0QkFBNEIsR0FBRyxDQUFDLE1BQWdCLEVBQUUsRUFBRTtJQUMvRCxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBZ0MsRUFBRSxLQUFhLEVBQUUsRUFBRTtRQUN0RixNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxtQ0FBUSxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQyxvQkFBTyxLQUFLLElBQUksQ0FBQztRQUNoRyxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDVCxDQUFDLENBQUM7QUFMVyxRQUFBLDRCQUE0QixnQ0FLdkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJQXNzZXQgfSBmcm9tICcuLi9pbnRlcmZhY2VzL0lBc3NldCc7XG5pbXBvcnQgeyBBc3NldE1hcCwgQXNzZXRUeXBlcywgQ2hhaW5JZCwgTWFrZU9wdGlvbmFsIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG4vKipcbiAqIEFkZHMgdGhlIGNvbW1vbiBwcm9wZXJ0aWVzIGZvciBlYWNoIHRva2VuIG1hcCAtIHR5cGUgYW5kIGNoYWluXG4gKiBAcGFyYW0gdG9rZW5zXG4gKiBAcGFyYW0gY2hhaW5cbiAqIEByZXR1cm5zXG4gKi9cbmV4cG9ydCBjb25zdCB0cmFuc2Zvcm1Ub2tlbk1hcCA9IChcbiAgdG9rZW5zOiBSZWNvcmQ8c3RyaW5nLCBNYWtlT3B0aW9uYWw8SUFzc2V0LCAndHlwZScgfCAnY2hhaW4nPj4sXG4gIGNoYWluOiBDaGFpbklkXG4pOiBBc3NldE1hcCA9PiB7XG4gIHJldHVybiBPYmplY3QudmFsdWVzKHRva2VucykucmVkdWNlKChyZXN1bHQ6IEFzc2V0TWFwLCB0b2tlbikgPT4ge1xuICAgIHJlc3VsdFt0b2tlbi5jb2RlXSA9IHsgLi4udG9rZW4sIHR5cGU6IEFzc2V0VHlwZXMuZXJjMjAsIGNoYWluIH07XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSwge30pO1xufTtcblxuLyoqXG4gKiB7XG4gKiAgICBbY2hhaW5JZF8xXToge1xuICogICAgICAgIFt0b2tlbl8xX2FkZHJlc3NdOiB7Li4ufSxcbiAqICAgICAgICBbdG9rZW5fMl9hZGRyZXNzXTogey4uLn1cbiAqICAgIH0sXG4gKiAgICBbY2hhaW5JZF8yXToge1xuICogICAgICAgIFt0b2tlbl8xX2FkZHJlc3NdOiB7Li4ufSxcbiAqICAgICAgICBbdG9rZW5fMl9hZGRyZXNzXTogey4uLn1cbiAqICAgIH1cbiAqIH1cbiAqIEBwYXJhbSB0b2tlbnNcbiAqIEByZXR1cm5zXG4gKi9cbmV4cG9ydCBjb25zdCB0cmFuc2Zvcm1DaGFpblRvVG9rZW5BZGRyZXNzID0gKHRva2VuczogQXNzZXRNYXApID0+IHtcbiAgcmV0dXJuIE9iamVjdC52YWx1ZXModG9rZW5zKS5yZWR1Y2UoKHJlc3VsdDogUmVjb3JkPHN0cmluZywgQXNzZXRNYXA+LCB0b2tlbjogSUFzc2V0KSA9PiB7XG4gICAgcmVzdWx0W3Rva2VuLmNoYWluXSA9IHsgLi4ucmVzdWx0W3Rva2VuLmNoYWluXSwgW1N0cmluZyh0b2tlbi5jb250cmFjdEFkZHJlc3MpXTogeyAuLi50b2tlbiB9IH07XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSwge30pO1xufTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6ImluSUFxQ1M7c1FBcENULDJELHVCQVFPLEtBQU1BLGtCQUFpQixDQUFHLENBQy9CQyxNQUQrQixDQUUvQkMsS0FGK0IsR0FHbkIsK0NBQ1osTUFBT0MsT0FBTSxDQUFDQyxNQUFQLENBQWNILE1BQWQsRUFBc0JJLE1BQXRCLENBQTZCLENBQUNDLE1BQUQsQ0FBbUJDLEtBQW5CLEdBQTRCLCtDQUM5REQsTUFBTSxDQUFDQyxLQUFLLENBQUNDLElBQVAsQ0FBTixDQUFrQkwsK0JBQVFJLEtBQVIsRUFBYSxDQUFFRSxJQUFJLENBQUVDLG1CQUFXQyxLQUFuQixDQUEwQlQsS0FBMUIsQ0FBYixDQUFsQixDQUQ4RCx1QkFFOUQsTUFBT0ksT0FBUCxDQUNELENBSE0sQ0FHSixFQUhJLENBQVAsQ0FJRCxDQVJNLEMsdUJBQU1NLDBCQUFpQlosaUJBQWpCLEMsdUJBd0JOLEtBQU1hLDZCQUE0QixDQUFJWixNQUFELEVBQXFCLCtDQUMvRCxNQUFPRSxPQUFNLENBQUNDLE1BQVAsQ0FBY0gsTUFBZCxFQUFzQkksTUFBdEIsQ0FBNkIsQ0FBQ0MsTUFBRCxDQUFtQ0MsS0FBbkMsR0FBb0QsZ0RBQ3RGRCxNQUFNLENBQUNDLEtBQUssQ0FBQ0wsS0FBUCxDQUFOLENBQW1CQywrQkFBUUcsTUFBTSxDQUFDQyxLQUFLLENBQUNMLEtBQVAsQ0FBZCxFQUEyQixDQUFFLENBQUNZLE1BQU0sQ0FBQ1AsS0FBSyxDQUFDUSxlQUFQLENBQVAsRUFBK0JaLGlCQUFPSSxLQUFQLENBQWpDLENBQTNCLENBQW5CLENBRHNGLHdCQUV0RixNQUFPRCxPQUFQLENBQ0QsQ0FITSxDQUdKLEVBSEksQ0FBUCxDQUlELENBTE0sQyx3QkFBTU0scUNBQTRCQyw0QkFBNUIiLCJuYW1lcyI6WyJ0cmFuc2Zvcm1Ub2tlbk1hcCIsInRva2VucyIsImNoYWluIiwiT2JqZWN0IiwidmFsdWVzIiwicmVkdWNlIiwicmVzdWx0IiwidG9rZW4iLCJjb2RlIiwidHlwZSIsInR5cGVzXzEiLCJlcmMyMCIsImV4cG9ydHMiLCJ0cmFuc2Zvcm1DaGFpblRvVG9rZW5BZGRyZXNzIiwiU3RyaW5nIiwiY29udHJhY3RBZGRyZXNzIl0sInNvdXJjZXMiOlsiL2hvbWUvbml1c2hhL0Rlc2t0b3AvVGVsZXBvcnREQU8vbGlxdWFsaXR5LXN3YXAtcHJvdmlkZXIvcGFja2FnZXMvY3J5cHRvYXNzZXRzL3NyYy9hc3NldHMvdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUFzc2V0IH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9JQXNzZXQnO1xuaW1wb3J0IHsgQXNzZXRNYXAsIEFzc2V0VHlwZXMsIENoYWluSWQsIE1ha2VPcHRpb25hbCB9IGZyb20gJy4uL3R5cGVzJztcblxuLyoqXG4gKiBBZGRzIHRoZSBjb21tb24gcHJvcGVydGllcyBmb3IgZWFjaCB0b2tlbiBtYXAgLSB0eXBlIGFuZCBjaGFpblxuICogQHBhcmFtIHRva2Vuc1xuICogQHBhcmFtIGNoYWluXG4gKiBAcmV0dXJuc1xuICovXG5leHBvcnQgY29uc3QgdHJhbnNmb3JtVG9rZW5NYXAgPSAoXG4gIHRva2VuczogUmVjb3JkPHN0cmluZywgTWFrZU9wdGlvbmFsPElBc3NldCwgJ3R5cGUnIHwgJ2NoYWluJz4+LFxuICBjaGFpbjogQ2hhaW5JZFxuKTogQXNzZXRNYXAgPT4ge1xuICByZXR1cm4gT2JqZWN0LnZhbHVlcyh0b2tlbnMpLnJlZHVjZSgocmVzdWx0OiBBc3NldE1hcCwgdG9rZW4pID0+IHtcbiAgICByZXN1bHRbdG9rZW4uY29kZV0gPSB7IC4uLnRva2VuLCB0eXBlOiBBc3NldFR5cGVzLmVyYzIwLCBjaGFpbiB9O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH0sIHt9KTtcbn07XG5cbi8qKlxuICoge1xuICogICAgW2NoYWluSWRfMV06IHtcbiAqICAgICAgICBbdG9rZW5fMV9hZGRyZXNzXTogey4uLn0sXG4gKiAgICAgICAgW3Rva2VuXzJfYWRkcmVzc106IHsuLi59XG4gKiAgICB9LFxuICogICAgW2NoYWluSWRfMl06IHtcbiAqICAgICAgICBbdG9rZW5fMV9hZGRyZXNzXTogey4uLn0sXG4gKiAgICAgICAgW3Rva2VuXzJfYWRkcmVzc106IHsuLi59XG4gKiAgICB9XG4gKiB9XG4gKiBAcGFyYW0gdG9rZW5zXG4gKiBAcmV0dXJuc1xuICovXG5leHBvcnQgY29uc3QgdHJhbnNmb3JtQ2hhaW5Ub1Rva2VuQWRkcmVzcyA9ICh0b2tlbnM6IEFzc2V0TWFwKSA9PiB7XG4gIHJldHVybiBPYmplY3QudmFsdWVzKHRva2VucykucmVkdWNlKChyZXN1bHQ6IFJlY29yZDxzdHJpbmcsIEFzc2V0TWFwPiwgdG9rZW46IElBc3NldCkgPT4ge1xuICAgIHJlc3VsdFt0b2tlbi5jaGFpbl0gPSB7IC4uLnJlc3VsdFt0b2tlbi5jaGFpbl0sIFtTdHJpbmcodG9rZW4uY29udHJhY3RBZGRyZXNzKV06IHsgLi4udG9rZW4gfSB9O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH0sIHt9KTtcbn07XG4iXX0=